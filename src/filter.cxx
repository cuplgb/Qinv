#include "la_trace.hh"#include "dbh.h"#ifdef __cplusplusextern "C"{#endif /* __cplusplus */ /*    Input:        trace: the data array pointer        len:   the size of the array        delta: the sampling interval (seconds)        f1:    low frequency cutoff (Hz)        f2:    high frequency cutoff (Hz)        ord:  order of the filter        pass:  integer variable containing the number of passes                - 1 -- forward filtering only                - 2 -- forward and reverse (i.e. zero phase) filtering    Output:        VOID        The filtered data overlap the original data.    Note: the original 'trace' will be destroyed.    DEV:    2017/06/11 Sheng Wang*/void bandpass_bu(float *trace, int len, float delta,    float f1, float f2, int ord, int pass) {    static char __bu[] = "BU";    static char __bp[] = "BP";    xapiir(trace, len, __bu, 0, 0, ord, __bp, f1, f2, delta, pass);    // Two zeros here are for chebyshev filter. Thus, they are useless}#ifdef __cplusplus}  /* extern "C" */#endif /* __cplusplus */